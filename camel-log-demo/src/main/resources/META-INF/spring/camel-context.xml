<?xml version="1.0" encoding="UTF-8"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2014, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!-- Configures the Camel Context-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    
    
    <bean id="props" class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer">
		<property name="location" value="classpath:properties/application-camel.properties"/>
	</bean> 
    
    <camelContext id="camelDemoContext" xmlns="http://camel.apache.org/schema/spring">
    	
    	<propertyPlaceholder location="ref:props" id="properties" />
    	
    	<jmxAgent id="agent" disabled="{{jmx.flag}}"/>
    	
    	<!-- This is a sample route to just demonstrate log manager  -->
    	<!-- you can have business logic in it -->
    	<!-- Time is used to start the route only once -->
        <route id="timerRoute">
        	<from uri="timer://foo?repeatCount=1"/>
        	<transform>
        		<simple>Message Processing has started to Log</simple>
        	</transform>
        	<setProperty propertyName="transactionId">
       			<simple resultType="java.lang.String">${exchangeId}</simple>
        	</setProperty>
        	<to uri="log:beginingOfTransaction?showAll=true&amp;level=DEBUG" />
        	<wireTap uri="{{log.request}}" />
        	<to uri="direct:businessLogic" />
        	<wireTap uri="{{log.response}}" />
        </route>
        
        <route id="businessLogicRoute">
        	<from uri="direct:businessLogic"/>
        	<transform>
        		<simple>Message Processed to Log</simple>
        	</transform>
        	<to uri="log:businessLog?showAll=true&amp;level=DEBUG"/>
        </route>
        
    </camelContext>
</beans>
